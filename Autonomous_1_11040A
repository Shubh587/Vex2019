#pragma config(Sensor, in1,    gyro,           sensorGyro)
#pragma config(Motor,  port1,           leftFront,     tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port2,           leftBack,      tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           rightFront,    tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port4,           rightBack,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           linlaunch,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,           arm1,          tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port7,           arm2,          tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port8,           intake,        tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

//Max Total Points: 6 pts.
//Min Total Points: 3 pts.
//Starting Point: BS2


void moveForward(int speed) {
	motor[leftFront] = speed;
	motor[leftBack] = speed;
	motor[rightFront] = speed;
	motor[rightBack] = speed;
}

void rightTurn(int speed) {
	motor[leftFront] = speed;
	motor[leftBack] = speed;
	motor[rightFront] = -speed;
	motor[rightBack] = -speed;
}

void leftTurn(int speed) {
	motor[leftFront] = -speed;
	motor[leftBack] = -speed;
	motor[rightFront] = speed;
	motor[rightBack] = speed;
}

void liftArm(int speed) {
	motor[arm1] = speed;
	motor[arm2] = speed;
}


task main() {
	
	//Clears out previous sensor readings
	SensorType[in1] = sensorNone;
	
	//Reconfigures analog port 2 as a gyro sensor
	SensorType[in2] = sensorGyro;
	SensorValue[gyro] = 0;
	//SensorValue[rightEncoder] = 0;

	//Picks up ball
	motor[intake] = 127;
	motor[intake] = 0;

	//Turns 90 degrees clockwise towards BF2
	while (abs(SensorValue[gyro]) < 880) {
			rightTurn(100);
	}
	rightTurn(0);
	
	//Shoots ball at BF2 (2 pts)
	motor[linlaunch] = 100;
	motor[linlaunch] = 0;
	
	//Move forward towards BF1, hit BFl (1 pt)
	while (abs(distance()) < 100) {
		moveForward(110);
	}
	moveForward(0);
	
	//Move backwards, until in line with BPL
	while (abs(distance()) < 42) {
		moveForward(110);
	}
	moveForward(0);
	
	//Reset Gyro sensor value to 0
	SensorValue[gyro] = 0;
	
	//Turn 90 degrees counter-clockwise 
	while (abs(SensorValue[gyro]) < 880) {
			leftTurn(100);
	}
	leftTurn(0);
	
	//Move forward onto BPl(3 pts)
	moveForward(127);
	wait1Msec(3000);
	
	
	
	






}
